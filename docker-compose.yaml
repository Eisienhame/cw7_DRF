version: "3"

services:
  db:
    image: postgres
    container_name: db
    user: postgres
    env_file:
      - ./.env
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER:  postgres
      POSTGRES_DB:  postgres
      POSTGRES_PASSWORD:  12345678
      POSTGRES_HOST:  db
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    container_name: redis_app
    command: redis-server --save 20 1 --loglevel warning
    hostname: redis
    ports:
      - '6379:6379'
    volumes:
      - ./data/cache/:/data

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: app
    container_name: app_container
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: bash -c "
      python manage.py makemigrations
      &&  python manage.py migrate
      &&  python manage.py runserver 0.0.0.0:8000"

  celery_worker:
    build:
      context: .
    container_name: 'celery_worker'
    image: app
    command: celery -A config worker -l INFO
    volumes:
      - .:/app

  celery_beat:
    build:
      context: .
    container_name: 'celery_beat'
    image: app
    command: celery -A config beat -l INFO
    volumes:
      - .:/app